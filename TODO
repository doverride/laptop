* target runuser, su

* add systemd units and admins for various systemd daemons i neglected: machine, locale, hostname etc
    the ones that have a ctl app as well as a service unit

* cover debug-shell.service

* Test it: systemd-notify can be run by system and session scripts (its an applications app) : there are some neat examples in man systemd-notify to test it

* figure out what /run/systemd/inaccessible is for and associate it with a private type

* target crypto-policies

* Due to a "bug/limitation" in the processing of constraints ubac.cil depends on staff.cil and sysadm.cil which depend on usersubject.cil
    - Remove that dependency if/when that "bug/limitation" in the processing of constraints is lifted
    - Fix the tests accordingly

* unconfined users currently get all HOME_DIR file contexts specs just like any other user (except root)
    should probably find a way to only add specs for those users that apply to them: home_dir_t, user_home_t, config_home_t, cache_home_t, data_home_t, ssh_home_t,
        systemd_config_home_t

    it does not really matter though since the user is unconfined anyways but it would be a little cleaner

    The problem would be that i would need to add more logic on how to determine which seuser is unconfined and which contexts to add and which not

* d30: rpmfusion: mplayer .. deps

* new netlink socket classes: once that hits my kernels replace all "netlink_socket_perms" with new netlink socket classperms

* target systemd-boot, efibootmgr and bootctl

* kernel 4.2: remove unused permissions: https://marc.info/?l=selinux&m=143335717624531&w=2
    See: commit b6bb6c2 and the revert of that commit

* test systemd-run -M, systemctl set-property systemd-nspawn@refpolicy CPUShares=750

* i should probably some time try out factory reset
    from what i understand i should just copy the stuff from /etc to /usr/share/factory/etc and then clear /etc
    systemd(?) should then take care of populating /etc from /usr/share/factory/etc

* investigate lscpu, hwloc, vfio (pci passthrough) (d30)

* systemd-socket-proxyd (socket activation for daemon that don't support it natively)

* trim nspawn_common_container_subject_type capabilities (can i remove sys_admin/net_admin?)

* kernel 4.2: sysfs genfscon support

* /usr/lib/systemd/system/unbound-keygen.service /usr/lib/systemd/system/dnssec-triggerd-keygen.service (override restorecon)
	also dnssec/unbound may not resolve after resume from suspend (this may or may not happen on my x131e only, since i only use
	a usb network there), restarting dnssec-triggerd.service fixes that. I could
	implement a similar solution to what i did with wpa_supplicant

* x131e, e145: apply /usr/local/bin/temps "sestatus" mod

* [ not merged into kernel yet it seems ] investigate sctp protocol support: https://marc.info/?l=selinux&m=142229478027000&w=2

